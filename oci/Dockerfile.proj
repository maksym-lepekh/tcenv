FROM alpine:edge

# toolchain
RUN apk add --no-cache llvm17 clang17 clang17-extra-tools
RUN apk add --no-cache libc++ libc++-dev libc++-static compiler-rt musl-dev
RUN apk add --no-cache make

# boost deps
RUN apk add --no-cache linux-headers

# libboost, need to build with clang and libc++
RUN wget https://boostorg.jfrog.io/artifactory/main/release/1.82.0/source/boost_1_82_0.tar.bz2 \
    && tar --bzip2 -xf boost_1_82_0.tar.bz2 \
    && cd boost_1_82_0/ \
    && ./bootstrap.sh --with-toolset=clang --without-icu \
    && ./b2 \
      toolset=clang \
      cxxflags="-std=c++2b -stdlib=libc++" \
      linkflags="-stdlib=libc++ -lc++abi" \
      variant=release \
      debug-symbols=off \
      threading=multi \
      runtime-link=static \
      link=static \
      --with-filesystem \
      --with-url \
      install \
    && cd .. && rm -rf boost_1_82_0*

# liblz4, need to build with clang
RUN wget https://github.com/lz4/lz4/releases/download/v1.9.4/lz4-1.9.4.tar.gz \
    && tar xzf lz4-1.9.4.tar.gz \
    && cd lz4-1.9.4/ \
    && CC=clang make \
    && CC=clang make install \
    && cd .. && rm -rf lz4-1.9.4*

# project tools
RUN apk add --no-cache pkgconf ninja-build ninja-is-really-ninja lf ccache git just

# cmake 3.28
RUN apk add --no-cache openssl-dev
RUN wget https://gitlab.kitware.com/cmake/cmake/-/archive/v3.28.0-rc3/cmake-v3.28.0-rc3.tar.gz \
    && tar xzf cmake-v3.28.0-rc3.tar.gz \
    && cd cmake-v3.28.0-rc3/ \
    && ./bootstrap  \
    && make  \
    && make install \
    && cd .. && rm -rf cmake-*

# project deps: libarchive, openssl
RUN apk add --no-cache libarchive-dev libarchive-static acl-static zlib-static xz-static bzip2-static expat-static zstd-static
RUN apk add --no-cache openssl-libs-static
